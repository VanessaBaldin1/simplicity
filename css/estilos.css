*,
*::after,
*::before {
    box-sizing: border-box;
}

/* Declaração de variáveis para a paleta de cores */

:root {
    --cor-titulo: #4d4d4d;
    --cor-texto: #333;
    --cor-escura: #000;
    --cor-clara: #fff;
    --cor-intermediaria: #ececec;
}

/* Reset em alguns elementos usados neste projeto */
body,
h1,
h2,
p,
figure,
.links-menu {
    margin: 0;
    padding: 0;
    list-style: none;
    /* removendo marcadores da lista ul*/
}

/* Importante para uso da medida relativa REM */
html {
    font-size: 16px;
}

body {
    font-family: "Noto Sans", sans-serif;
    color: var(--cor-texto);
}

img {
    max-width: 100%;
}

a {
    text-decoration: none;
}

.titulo {
    font-size: Raleway, sans-serif;
    text-transform: uppercase;
    font-weight: 800;
    font-size: 1.5rem;

    /* Formatando o link dentro do h1 */

    a {
        background-color: var(--cor-escura);
        color: var(--cor-clara);
        padding: 0.3rem 1rem;
        border-radius: 4px;
    }
}

.topo {
    /* Para fixar o menu na pagina */
    position: sticky;
    top: 0;
    background-color: var(--cor-clara);

    /* Para colocar as fotos para tras do header */
    z-index: 10;


    /* Classe  .limitador especifica para uso no cabeçalho/topo: além das configurações  gerais (width e margin), AQUI ela também tem altura e ajustes do flex. */
    .limitador { 
    /* Provisório usa 12vh ou usa 150px para testes*/
    height: 12vh;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

}

/* Classe  .limitador de uso geral:
sempre terá largura de 95vw e margin auto não importando onde será aplicada. */

.limitador {
    width: 95vw;
    margin: auto;
}

.titulo-menu a {
    color: var(--cor-escura);
    font-size: 1.2rem;
    padding: 1rem;
    display: inline-block;
}

.menu a:hover,
.menu a:focus {
    background-color: var(--cor-intermediaria);
}

/* Estilos para a lista ul contida no meu nav */

.links-menu {
    /* Atenção! Neste ponto, fazemos com que os links do menu iniciem escondidos (display:none). Posteriormente, com a ajuda do CSS combinado com o JS, faremos os comandos necessários para exibir/esconder de forma alternada. */
    display: none;

    a {
        color: var(--cor-escura);
        font-weight: bold;
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;

    }
}

.links-menu.aberto {
    /* Ativamos o flex para anularo display: none (fazendo os links aparecem) e ao mesmo tempo ter os recursos do flex. */
    display: flex;

    /* Mudamos a direção para coluna para voltar a exibirum link em cima do outro */
    flex-direction: column;

    /* Usamos o position e coordenadas para ajustar a posição final e o tamanho que os links ocuparão na tela logo abaixo da palavra Menu. */
    position: absolute;


    left: 0;
    right: 0;
    background-color: var(--cor-clara);
}

/* Exercício */

/* 1) Crie uma regra específica para formatar o artigo "destaque" com o as seguintes configurações. */

/* - Altura de 88vh
  Imagem de fundo (fundo-destaque)
  Imagem de fundo deve ficar parado
  Use o flex para alinhar totalmente no meio
  Use o flex para garantir que os textos fiquem um em cima do outro

2) Crie uma regra para formatar  o "h2" e o "p" contidos no "Destaque". Faça com que os textos fiquem centralizados com a cor clara.*/

.destaque {
    height: 88vh;
    background-image: url(../imagens/fundo-destaque.jpg);
    background-attachment: fixed;
    background-repeat: no-repeat;
    background-size: cover;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;


    h2,
    p {
        color: var(--cor-clara);
        text-align: center;

        /* Aplicar a animação */

        animation-name: animaDestaque;
        animation-duration: .5s;

    }

    /* h2 { font-size: 3rem;}
    p { font-size: 1.3rem;} */

    /* Usando a função clamp() ATENÇÃO PODE USAR NO LUGAR DAS MEDIAS
     Função útil para redimensionamento responsivo de acordo com critérios de tamanhos mínimo, ideal/variável/responsivo e máximo. Uso mais comum é para textos responsivos, mas pode ser usada com qualquer propriedade que envolva tamanhos (width, height etc).
     
    clamp ()
        tamanho mínimo;
        tamanho ideal/variável/responsivo;
        tamanho máximo;

    */

    /* 10vw é para lateral da viewport
    primeiro valor minimo - tamanho da visualização e maximo*/
    h2 {
        font-size: clamp(3rem, 10vw, 7rem);

    }

    p {
        font-size: clamp (1.5rem, 3vw, 3rem);
        animation-delay: .5s;

        /* Backwards significa antes da animação: o elemento assume o estilo do primeiro keyframe (ou seja, o from). Portanto assim, forçamos a iniciar com opacity zero e escala menor. */
        animation-fill-mode: backwards;

    }
}

/* 1) Criar animação */
@keyframes animaDestaque {

    from {
        opacity: 0;
        transform: scale(0.3);

    }

    to {
        opacity: 1;
        transform: scale(1);
    }

}

/* Até aqui foram estilizações somente do quadro que tem o texto HTML e CSS */



/*  Agora será feito a estilização do bloco dos artigos */

/* vamos devolver o espaçamento que zeramos no reset 
vai mexer em todos os h2 restantes da pagina*/


/* vamos devolver todos os espaçamentos que foram zerados no reset lá inicio */
article {

    h2 {
        padding: 1rem;
        font-size: 1.4rem;
        font-family: Raleway, sans-serif;
        color: var(--cor-titulo)
    }

    p {
        padding: .5rem 0;
        font-size: 1.2rem;
    }


    address {
        font-style: normal;
        font-size: 1.2rem;
    }
}


.front-end, .historia, .localizacao {
     text-align: center;
}

.historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-size: cover;
    background-attachment: fixed;

    h2 { color:var(--cor-clara);
        text-shadow: 4px 4px 4px red;
    }

    iframe {
        width: 100%;
        max-width: 700px;
        margin-bottom: 2rem;
    }
}

.localizacao iframe {
    width: 100%;
    margin-top: 2rem;
}


.rodape {
    background-color: var(--cor-escura);
    color: var(--cor-clara);
    height: 30vh;
    font-style: 300;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}



/* Regras para as páginas internas
(Produtos, Serviços e Contato) */

.conteudo-interno {

    background-color: var(--cor-intermediaria);
    padding: .5rem;
    border-radius: 8px;

    h2 {padding-left: 0;}
}

table {
    border: solid 4px var(--cor-escura);
    width: 80%;
    margin: auto;
    max-width: 600px;


    /* Removendo o espaçamento entre as bordas das células */
    border-collapse: collapse;
}

caption {
    font-size: 20px;
    text-transform: uppercase;
    padding: .3rem;
}

th,
td {
    border: solid 1px var(--cor-escura);
    padding: .5rem;
}

th {
    background-color: var(--cor-escura);
    color:var(--cor-clara);
    font-size: 14px;
}

td:nth-child(2) { text-align: center; }

td:last-child, th:last-child {
    text-align: right;
}

tr:nth-child(even) {
    background-color: var(--cor-clara);
}

/* Galeria de fotos */

.galeria  {
    text-align: center;

    img {
    
    border-radius: 50%;
    transform: scale(0.8) rotate(-10deg);
    box-shadow: var(--cor-escura) 0 0 30px;

    &:hover{
        transform:scale(1) rotate(0);
        transition:  transform 0.5s ease-in-out;
    }
   
}
}


